openapi: 3.0.3
info:
  title: Lumen
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://agency.test'
paths:
  /v1/agencies/auth/register:
    post:
      summary: "Register Agency\nThis api is useful for register new Agency and return access token with agency and user information"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Client-ID
          description: ''
          example: 'string required'
          schema:
            type: string
        -
          in: header
          name: Client-Secret
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'User first name'
                  example: Bionic
                last_name:
                  type: string
                  description: 'User last name'
                  example: WP
                email:
                  type: email
                  description: 'User email address'
                  example: admin@bionicwp.com
                password:
                  type: string
                  description: 'User password'
                  example: abcd1234
                password_confirmation:
                  type: string
                  description: 'User password'
                  example: abcd1234
                agency_name:
                  type: string
                  description: ''
                  example: 'abc-agency, abc agency'
              required:
                - first_name
                - last_name
                - email
                - password
                - password_confirmation
                - agency_name
      security: []
  /v1/agencies/auth/login:
    post:
      summary: "Access Token Or Login\nThis function is useful for login, to return access token for agencies."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Client-ID
          description: ''
          example: 'string required'
          schema:
            type: string
        -
          in: header
          name: Client-Secret
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    authentication:
                      access_token: eyJ0eXAiOiJKV1dsadasdsadsadI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZWVjsadsadsadsadsadsadasOWRkNGI1NGI0NDM1NjQ4Y2FjYmQ3NjE2Mzk5MmViNzU4NDVmYzQwYTBlMGE3MWViMTZhMzE1ZmFlOWEiLCJpYXQiOjE2NDY4MTE2ODIuMDg1MTY0LCJuYmYiOjE2NDY4MTE2ODIuMDg1MTgxLCJleHAiOjE2NzgzNDc2ODIuMDcxNDcsInN1YiI6IjE1Iiwic2NvcGVzIjpbXX0.D0tOC4p1lKX8EYOGedrNHvt1s5kzxVxAtFuYUz8zT2lg5ePDiBydjDrS1ARlshnrL71GIucMhpg1Nazt-3nJL4FbFKXmbZJX-Ltu-lYIxuKqCSqCZDA9XOFchfSuxwzsm9-vFCBhGzSWgxDQucYAKvcU3HiiTisHqaupMlx8sOhivt3PtNQe2VZRpvJHGUQNJsAhs3YavBaLjyUjulwp9j5gotfa4oDmVNB9c15ilTX38X8wxWhiV-zyEC2kSI1BQV9RhS2e54oyorgKxqq5m5S0fBxLIAK3F5B_-LGYKh4xrlNC-w0z0YZh1a1dmCGWnUmCB2qN_fHP_cZ8jXnfqxsf6j7qxrzHhv6WFa5qj1P-ofUDn4ZW3FIp-Ja-7FaNPzBDMbQUKpTlTet1rBFs5ayP8gIhcsp25gw8Q3yNKCcuT5Hm2FzHJQqUdKPv5iqD9wwK48dCYwoOqrtbdZAfgQU9norNzJysp9tuY3FXXGvtBZ6BbZiR_cFfQvyVD97YBGedvZrSlqi7kQJGAKTLx4iXes7LLjKOuvI_RgsNvyw4xsfe4ycjjZhSwqERH3jhd4fUomKO-aKh1WrCf1-4jnCvzNmIO6xZ29PX4XsyhndUctcysXY3tpFx_EGaI-a4oXhP4NQNfkIVvPAUEC0XSfwzRYg5FZDV71xnjTdausw
                      token_type: Bearer
                      expiry: '2022-03-19 07:41:22'
                      agency:
                        id: 3
                        agency_name: 'abc agency 123'
                        created_at: '2022-03-09T07:41:21.000000Z'
                      user:
                        id: 15
                        first_name: faizan
                        last_name: raza
                        email: agency102@agt.com
                        last_logged_in: null
                        status: pending
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      authentication:
                        access_token: eyJ0eXAiOiJKV1dsadasdsadsadI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZWVjsadsadsadsadsadsadasOWRkNGI1NGI0NDM1NjQ4Y2FjYmQ3NjE2Mzk5MmViNzU4NDVmYzQwYTBlMGE3MWViMTZhMzE1ZmFlOWEiLCJpYXQiOjE2NDY4MTE2ODIuMDg1MTY0LCJuYmYiOjE2NDY4MTE2ODIuMDg1MTgxLCJleHAiOjE2NzgzNDc2ODIuMDcxNDcsInN1YiI6IjE1Iiwic2NvcGVzIjpbXX0.D0tOC4p1lKX8EYOGedrNHvt1s5kzxVxAtFuYUz8zT2lg5ePDiBydjDrS1ARlshnrL71GIucMhpg1Nazt-3nJL4FbFKXmbZJX-Ltu-lYIxuKqCSqCZDA9XOFchfSuxwzsm9-vFCBhGzSWgxDQucYAKvcU3HiiTisHqaupMlx8sOhivt3PtNQe2VZRpvJHGUQNJsAhs3YavBaLjyUjulwp9j5gotfa4oDmVNB9c15ilTX38X8wxWhiV-zyEC2kSI1BQV9RhS2e54oyorgKxqq5m5S0fBxLIAK3F5B_-LGYKh4xrlNC-w0z0YZh1a1dmCGWnUmCB2qN_fHP_cZ8jXnfqxsf6j7qxrzHhv6WFa5qj1P-ofUDn4ZW3FIp-Ja-7FaNPzBDMbQUKpTlTet1rBFs5ayP8gIhcsp25gw8Q3yNKCcuT5Hm2FzHJQqUdKPv5iqD9wwK48dCYwoOqrtbdZAfgQU9norNzJysp9tuY3FXXGvtBZ6BbZiR_cFfQvyVD97YBGedvZrSlqi7kQJGAKTLx4iXes7LLjKOuvI_RgsNvyw4xsfe4ycjjZhSwqERH3jhd4fUomKO-aKh1WrCf1-4jnCvzNmIO6xZ29PX4XsyhndUctcysXY3tpFx_EGaI-a4oXhP4NQNfkIVvPAUEC0XSfwzRYg5FZDV71xnjTdausw
                        token_type: Bearer
                        expiry: '2022-03-19 07:41:22'
                        agency:
                          id: 3
                          agency_name: 'abc agency 123'
                          created_at: '2022-03-09T07:41:21.000000Z'
                        user:
                          id: 15
                          first_name: faizan
                          last_name: raza
                          email: agency102@agt.com
                          last_logged_in: null
                          status: pending
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: email
                  description: 'The username of user.'
                  example: admin@my-app.com
                password:
                  type: string
                  description: 'The password of user.'
                  example: 'Abc*123*'
              required:
                - email
                - password
      security: []
  /v1/agencies/auth/verify-token:
    post:
      summary: "Verify Token\nThis function is useful to check the token is valid or not"
      description: ''
      parameters:
        -
          in: query
          name: token
          description: S0OoOuegYqgQX8JMnbovfnaV7QjMEHLc
          example: S0OoOuegYqgQX8JMnbovfnaV7QjMEHLc
          required: true
          schema:
            type: string
            description: S0OoOuegYqgQX8JMnbovfnaV7QjMEHLc
            example: S0OoOuegYqgQX8JMnbovfnaV7QjMEHLc
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Client-ID
          description: ''
          example: 'string required'
          schema:
            type: string
        -
          in: header
          name: Client-Secret
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\r\n  \"data\": {\r\n    \"redirectUrl\": \"abcagencycasdedaswe.agency.test\",\r\n  },\r\n  \"error\": {},\r\n  \"success\": true,\r\n  \"message\": \"Operation successful\"\r\n}"
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Authentication'
      security: []
  /v1/agencies/auth/forget-password:
    post:
      summary: "Forgot Password\nThis api will send an email to valid user with token for resetting his/her password"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Client-ID
          description: ''
          example: 'string required'
          schema:
            type: string
        -
          in: header
          name: Client-Secret
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: String
                  description: 'User valid email address'
                  example: user@bionicwp.com
              required:
                - email
      security: []
  /v1/agencies/auth/create-new-password:
    post:
      summary: "Create New Password\nauthenticate user request and then create new password"
      description: ''
      parameters:
        -
          in: query
          name: token
          description: 'String T5oqVFXCYiDjUtZpzvXJXvzw2xJClHNA'
          example: T5oqVFXCYiDjUtZpzvXJXvzw2xJClHNA
          required: true
          schema:
            type: string
            description: 'String T5oqVFXCYiDjUtZpzvXJXvzw2xJClHNA'
            example: T5oqVFXCYiDjUtZpzvXJXvzw2xJClHNA
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Client-ID
          description: ''
          example: 'string required'
          schema:
            type: string
        -
          in: header
          name: Client-Secret
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: String
                  description: abcd1234
                  example: abcd1234
                password_confirmation:
                  type: String
                  description: abcd1234
                  example: abcd1234
              required:
                - password
                - password_confirmation
      security: []
  /v1/agencies/logout:
    delete:
      summary: "Logout\nHit api and session get out"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Authentication'
  /v1/agencies/verification:
    post:
      summary: "Generate Verification Token\nThis function generate new verification token of user"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
      tags:
        - 'Agency Authentication'
  /v1/agencies/change-password:
    put:
      summary: "Change Password\nchange password request of user"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: String
                  description: abcd1234
                  example: abcd1234
                password_confirmation:
                  type: String
                  description: abcd1234
                  example: abcd1234
              required:
                - password
                - password_confirmation
  /v1/agencies/agency-profile:
    put:
      summary: "Change Password\nchange password request of user"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: String
                  description: abcd1234
                  example: abcd1234
                password_confirmation:
                  type: String
                  description: abcd1234
                  example: abcd1234
              required:
                - password
                - password_confirmation
  '/v1/agencies/customers/{id}':
    get:
      summary: "Customer Details\nThis api show the details of requested Customer."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    user:
                      id: 7
                      first_name: Faizan
                      last_name: Ahmed
                      email: faizan102@saasfa.com
                      last_logged_in: null
                      status: pending
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      user:
                        id: 7
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan102@saasfa.com
                        last_logged_in: null
                        status: pending
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Customers'
    put:
      summary: "Customer Update\nThis api update the details of requested Customer."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customers:
                      -
                        id: 12
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan108@saasfa.com
                        last_logged_in: null
                        status: active
                      -
                        id: 11
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan107@saasfa.com
                        last_logged_in: null
                        status: active
                    pagination:
                      total: 10
                      count: 10
                      per_page: 20
                      current_page: 1
                      total_pages: 1
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      customers:
                        -
                          id: 12
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan108@saasfa.com
                          last_logged_in: null
                          status: active
                        -
                          id: 11
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan107@saasfa.com
                          last_logged_in: null
                          status: active
                      pagination:
                        total: 10
                        count: 10
                        per_page: 20
                        current_page: 1
                        total_pages: 1
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Customers'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: String
                  description: ''
                  example: iste
                last_name:
                  type: String
                  description: ''
                  example: at
              required:
                - first_name
                - last_name
    delete:
      summary: 'Delete Customer'
      description: 'Delete Requested Record'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Customers'
    parameters:
      -
        in: path
        name: id
        description: Integer
        example: voluptate
        required: true
        schema:
          type: string
  /v1/agencies/customers:
    post:
      summary: "Create Customer\nThis api is for create new Customer"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    user:
                      id: 7
                      first_name: Faizan
                      last_name: Ahmed
                      email: faizan102@saasfa.com
                      last_logged_in: null
                      status: pending
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      user:
                        id: 7
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan102@saasfa.com
                        last_logged_in: null
                        status: pending
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Customers'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: String
                  description: ''
                  example: dicta
                last_name:
                  type: String
                  description: ''
                  example: eum
                email:
                  type: String
                  description: 'ex: abc.com,xyz.co'
                  example: qui
              required:
                - first_name
                - last_name
                - email
    get:
      summary: "Customers List\nThis api return the collection of all Agency Customers."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    customers:
                      -
                        id: 12
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan108@saasfa.com
                        last_logged_in: null
                        status: active
                      -
                        id: 11
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan107@saasfa.com
                        last_logged_in: null
                        status: active
                    pagination:
                      total: 10
                      count: 10
                      per_page: 20
                      current_page: 1
                      total_pages: 1
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      customers:
                        -
                          id: 12
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan108@saasfa.com
                          last_logged_in: null
                          status: active
                        -
                          id: 11
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan107@saasfa.com
                          last_logged_in: null
                          status: active
                      pagination:
                        total: 10
                        count: 10
                        per_page: 20
                        current_page: 1
                        total_pages: 1
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Customers'
  '/v1/agencies/customers/change-status/{id}':
    put:
      summary: "Toggle Customer Status\nThis api update the customers status to active or deactive"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Customers'
    parameters:
      -
        in: path
        name: id
        description: ''
        example: 4
        required: true
        schema:
          type: integer
  /v1/agencies/permissions:
    get:
      summary: "Permission List\nThis api return the collection of all Permissions created."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    collections:
                      -
                        id: 13
                        name: users_toggle_status
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 12
                        name: users_delete
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 11
                        name: users_update
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 10
                        name: users_create
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 9
                        name: users_read
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 8
                        name: users_all
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 7
                        name: permissions_list
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 6
                        name: roles_delete
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 5
                        name: roles_update
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 4
                        name: roles_create
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 3
                        name: roles_read
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 2
                        name: roles_all
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 1
                        name: access_all
                        created_at: '2022-03-04T14:54:53.000000Z'
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      collections:
                        -
                          id: 13
                          name: users_toggle_status
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 12
                          name: users_delete
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 11
                          name: users_update
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 10
                          name: users_create
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 9
                          name: users_read
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 8
                          name: users_all
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 7
                          name: permissions_list
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 6
                          name: roles_delete
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 5
                          name: roles_update
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 4
                          name: roles_create
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 3
                          name: roles_read
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 2
                          name: roles_all
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 1
                          name: access_all
                          created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
      tags:
        - 'Agency Permissions Api'
  /v1/agencies/roles:
    get:
      summary: "Roles List\nThis api return the collection of all Roles created."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    roles:
                      -
                        id: 1
                        name: 'Super Admin'
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions:
                          -
                            id: 1
                            name: access_all
                            created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 2
                        name: Admin
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 3
                        name: Agency
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 4
                        name: Customer
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 5
                        name: User
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 6
                        name: Finance
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 7
                        name: HR
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 8
                        name: Accounts
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      roles:
                        -
                          id: 1
                          name: 'Super Admin'
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions:
                            -
                              id: 1
                              name: access_all
                              created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 2
                          name: Admin
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 3
                          name: Agency
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 4
                          name: Customer
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 5
                          name: User
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 6
                          name: Finance
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 7
                          name: HR
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 8
                          name: Accounts
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
      tags:
        - 'Agency Roles Management'
    post:
      summary: "Create Role\nThis api is for create new Role"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    role:
                      id: 1
                      name: 'Super Admin'
                      created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        -
                          id: 1
                          name: access_all
                          created_at: '2022-03-04T14:54:53.000000Z'
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      role:
                        id: 1
                        name: 'Super Admin'
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions:
                          -
                            id: 1
                            name: access_all
                            created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Roles Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: String
                  description: ''
                  example: ut
                permissions:
                  type: array
                  description: optional
                  example:
                    - quo
                  items:
                    type: string
              required:
                - name
    parameters:
      -
        in: path
        name: order_by
        description: 'Optional parameter. ex: asc/desc'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: sunt
      -
        in: path
        name: from_date
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: Y-m-d
      -
        in: path
        name: to_date
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: Y-m-d
      -
        in: path
        name: pagination
        description: 'Optional parameter.'
        required: true
        schema:
          type: boolean
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: true
      -
        in: path
        name: page_limit
        description: 'Optional parameter.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 17
      -
        in: path
        name: page
        description: 'Optional parameter.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 9
  '/v1/agencies/roles/{id}':
    get:
      summary: "Role Details\nThis api show the details of requested Role."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    role:
                      id: 1
                      name: 'Super Admin'
                      created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        -
                          id: 1
                          name: access_all
                          created_at: '2022-03-04T14:54:53.000000Z'
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      role:
                        id: 1
                        name: 'Super Admin'
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions:
                          -
                            id: 1
                            name: access_all
                            created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Roles Management'
    put:
      summary: "Role Update\nThis api update the details of requested Role."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    role:
                      id: 1
                      name: 'Super Admin'
                      created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        -
                          id: 1
                          name: access_all
                          created_at: '2022-03-04T14:54:53.000000Z'
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      role:
                        id: 1
                        name: 'Super Admin'
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions:
                          -
                            id: 1
                            name: access_all
                            created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Roles Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: String
                  description: ''
                  example: illum
                permissions:
                  type: array
                  description: optional
                  example:
                    - aut
                  items:
                    type: string
              required:
                - name
    delete:
      summary: 'Delete Role'
      description: 'Delete Requested Record'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Roles Management'
    parameters:
      -
        in: path
        name: id
        description: ''
        example: ducimus
        required: true
        schema:
          type: string
      -
        in: path
        name: role_id
        description: Integer
        example: fugit
        required: true
        schema:
          type: string
  /v1/agencies/services:
    get:
      summary: "Get Services\nThis api return services collection."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    services:
                      -
                        id: 1
                        name: 'serRvice 101'
                        description: 'test description'
                        image: 'https://res.cloudinary.com/saasfa/image/upload/v1647853184/service-62383e80c532e.jpg'
                        subscription_type: one-off
                        status: pending
                        price_types:
                          id: 1
                          price: 123
                          purchase_limit: 12
                          weekly: null
                          monthly: null
                          quarterly: null
                          biannually: null
                          annually: null
                          max_concurrent_requests: null
                          max_requests_per_month: null
                          created_at: '2022-03-21T08:59:45.000000Z'
                          updated_at: '2022-03-21T08:59:45.000000Z'
                        intakes:
                          id: 1
                          intake:
                            -
                              field: text
                              name: title
                            -
                              field: text
                              name: description
                          created_at: '2022-03-21T08:59:45.000000Z'
                          updated_at: '2022-03-21T08:59:45.000000Z'
                        created_at: '2022-03-21T08:59:45.000000Z'
                        updated_at: '2022-03-21T08:59:45.000000Z'
                    pagination:
                      total: 1
                      count: 1
                      per_page: 20
                      current_page: 1
                      total_pages: 1
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      services:
                        -
                          id: 1
                          name: 'serRvice 101'
                          description: 'test description'
                          image: 'https://res.cloudinary.com/saasfa/image/upload/v1647853184/service-62383e80c532e.jpg'
                          subscription_type: one-off
                          status: pending
                          price_types:
                            id: 1
                            price: 123
                            purchase_limit: 12
                            weekly: null
                            monthly: null
                            quarterly: null
                            biannually: null
                            annually: null
                            max_concurrent_requests: null
                            max_requests_per_month: null
                            created_at: '2022-03-21T08:59:45.000000Z'
                            updated_at: '2022-03-21T08:59:45.000000Z'
                          intakes:
                            id: 1
                            intake:
                              -
                                field: text
                                name: title
                              -
                                field: text
                                name: description
                            created_at: '2022-03-21T08:59:45.000000Z'
                            updated_at: '2022-03-21T08:59:45.000000Z'
                          created_at: '2022-03-21T08:59:45.000000Z'
                          updated_at: '2022-03-21T08:59:45.000000Z'
                      pagination:
                        total: 1
                        count: 1
                        per_page: 20
                        current_page: 1
                        total_pages: 1
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Services'
    post:
      summary: "Create Service\nThis api create new service."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    service:
                      id: 22
                      name: 'serRvice 101'
                      description: 'test description'
                      image: 'https://res.cloudinary.com/saasfa/image/upload/v1647847542/service-623828258538b.jpg'
                      subscription_type: one-off
                      status: pending
                      price_types:
                        id: 21
                        price: 1234
                        purchase_limit: 12
                        weekly: null
                        monthly: null
                        quarterly: null
                        biannually: null
                        annually: null
                        max_concurrent_requests: null
                        max_requests_per_month: null
                        created_at: '2022-03-21T07:24:22.000000Z'
                        updated_at: '2022-03-21T07:24:22.000000Z'
                      intakes:
                        id: 22
                        intake:
                          -
                            field: text
                            name: title
                          -
                            field: text
                            name: description
                        created_at: '2022-03-21T07:24:22.000000Z'
                        updated_at: '2022-03-21T07:24:22.000000Z'
                      created_at: '2022-03-21T07:24:22.000000Z'
                      updated_at: '2022-03-21T07:24:22.000000Z'
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      service:
                        id: 22
                        name: 'serRvice 101'
                        description: 'test description'
                        image: 'https://res.cloudinary.com/saasfa/image/upload/v1647847542/service-623828258538b.jpg'
                        subscription_type: one-off
                        status: pending
                        price_types:
                          id: 21
                          price: 1234
                          purchase_limit: 12
                          weekly: null
                          monthly: null
                          quarterly: null
                          biannually: null
                          annually: null
                          max_concurrent_requests: null
                          max_requests_per_month: null
                          created_at: '2022-03-21T07:24:22.000000Z'
                          updated_at: '2022-03-21T07:24:22.000000Z'
                        intakes:
                          id: 22
                          intake:
                            -
                              field: text
                              name: title
                            -
                              field: text
                              name: description
                          created_at: '2022-03-21T07:24:22.000000Z'
                          updated_at: '2022-03-21T07:24:22.000000Z'
                        created_at: '2022-03-21T07:24:22.000000Z'
                        updated_at: '2022-03-21T07:24:22.000000Z'
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Services'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: earum
                description:
                  type: string
                  description: ''
                  example: voluptatem
                image:
                  type: string
                  description: 'optional ex: base64imageFile formats: png,jpeg,jpg'
                  example: laborum
                subscription_type:
                  type: string
                  description: 'ex: ''one-off'' ,''recurring'''
                  example: asperiores
                price:
                  type: integer
                  description: 'only if subscription_type is one_off ex: 123'
                  example: 14
                purchase_limit:
                  type: integer
                  description: 'optional only if subscription_type is one_off ex: 12'
                  example: 11
                weekly:
                  type: integer
                  description: 'only if subscription_type is recurring ex: 123'
                  example: 1
                monthly:
                  type: integer
                  description: 'only if subscription_type is recurring ex: 123'
                  example: 1
                quarterly:
                  type: integer
                  description: 'only if subscription_type is recurring ex: 123'
                  example: 20
                biannually:
                  type: integer
                  description: 'only if subscription_type is recurring ex: 123'
                  example: 4
                annually:
                  type: integer
                  description: 'only if subscription_type is recurring ex: 123'
                  example: 16
                max_concurrent_requests:
                  type: integer
                  description: 'optional only if subscription_type is recurring ex: 12'
                  example: 4
                max_requests_per_month:
                  type: integer
                  description: 'optional only if subscription_type is recurring ex: 12'
                  example: 2
              required:
                - name
                - description
                - subscription_type
                - price
                - weekly
                - monthly
                - quarterly
                - biannually
                - annually
    parameters:
      -
        in: path
        name: services
        description: 'Optional parameter. 1,2,3,4'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ut
      -
        in: path
        name: name
        description: 'Optional parameter. ex: my service'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: modi
      -
        in: path
        name: status
        description: 'Optional parameter. ex: pending,active'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: modi
      -
        in: path
        name: order_by
        description: 'Optional parameter. ex: asc/desc'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: suscipit
      -
        in: path
        name: from_date
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: Y-m-d
      -
        in: path
        name: to_date
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: Y-m-d
      -
        in: path
        name: pagination
        description: 'Optional parameter.'
        required: true
        schema:
          type: boolean
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: true
      -
        in: path
        name: page_limit
        description: 'Optional parameter.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 19
      -
        in: path
        name: page
        description: 'Optional parameter.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 5
  '/v1/agencies/services/{id}':
    get:
      summary: "Show Service Details\nThis api show the service details."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    service:
                      id: 22
                      name: 'serRvice 101'
                      description: 'test description'
                      image: 'https://res.cloudinary.com/saasfa/image/upload/v1647847542/service-623828258538b.jpg'
                      subscription_type: one-off
                      status: pending
                      price_types:
                        id: 21
                        price: 1234
                        purchase_limit: 12
                        weekly: null
                        monthly: null
                        quarterly: null
                        biannually: null
                        annually: null
                        max_concurrent_requests: null
                        max_requests_per_month: null
                        created_at: '2022-03-21T07:24:22.000000Z'
                        updated_at: '2022-03-21T07:24:22.000000Z'
                      intakes:
                        id: 22
                        intake:
                          -
                            field: text
                            name: title
                          -
                            field: text
                            name: description
                        created_at: '2022-03-21T07:24:22.000000Z'
                        updated_at: '2022-03-21T07:24:22.000000Z'
                      created_at: '2022-03-21T07:24:22.000000Z'
                      updated_at: '2022-03-21T07:24:22.000000Z'
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      service:
                        id: 22
                        name: 'serRvice 101'
                        description: 'test description'
                        image: 'https://res.cloudinary.com/saasfa/image/upload/v1647847542/service-623828258538b.jpg'
                        subscription_type: one-off
                        status: pending
                        price_types:
                          id: 21
                          price: 1234
                          purchase_limit: 12
                          weekly: null
                          monthly: null
                          quarterly: null
                          biannually: null
                          annually: null
                          max_concurrent_requests: null
                          max_requests_per_month: null
                          created_at: '2022-03-21T07:24:22.000000Z'
                          updated_at: '2022-03-21T07:24:22.000000Z'
                        intakes:
                          id: 22
                          intake:
                            -
                              field: text
                              name: title
                            -
                              field: text
                              name: description
                          created_at: '2022-03-21T07:24:22.000000Z'
                          updated_at: '2022-03-21T07:24:22.000000Z'
                        created_at: '2022-03-21T07:24:22.000000Z'
                        updated_at: '2022-03-21T07:24:22.000000Z'
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
      tags:
        - 'Agency Services'
    put:
      summary: "Update Service\nThis api update service."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    service:
                      id: 22
                      name: 'serRvice 101'
                      description: 'test description'
                      image: 'https://res.cloudinary.com/saasfa/image/upload/v1647847542/service-623828258538b.jpg'
                      subscription_type: one-off
                      status: pending
                      price_types:
                        id: 21
                        price: 1234
                        purchase_limit: 12
                        weekly: null
                        monthly: null
                        quarterly: null
                        biannually: null
                        annually: null
                        max_concurrent_requests: null
                        max_requests_per_month: null
                        created_at: '2022-03-21T07:24:22.000000Z'
                        updated_at: '2022-03-21T07:24:22.000000Z'
                      intakes:
                        id: 22
                        intake:
                          -
                            field: text
                            name: title
                          -
                            field: text
                            name: description
                        created_at: '2022-03-21T07:24:22.000000Z'
                        updated_at: '2022-03-21T07:24:22.000000Z'
                      created_at: '2022-03-21T07:24:22.000000Z'
                      updated_at: '2022-03-21T07:24:22.000000Z'
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      service:
                        id: 22
                        name: 'serRvice 101'
                        description: 'test description'
                        image: 'https://res.cloudinary.com/saasfa/image/upload/v1647847542/service-623828258538b.jpg'
                        subscription_type: one-off
                        status: pending
                        price_types:
                          id: 21
                          price: 1234
                          purchase_limit: 12
                          weekly: null
                          monthly: null
                          quarterly: null
                          biannually: null
                          annually: null
                          max_concurrent_requests: null
                          max_requests_per_month: null
                          created_at: '2022-03-21T07:24:22.000000Z'
                          updated_at: '2022-03-21T07:24:22.000000Z'
                        intakes:
                          id: 22
                          intake:
                            -
                              field: text
                              name: title
                            -
                              field: text
                              name: description
                          created_at: '2022-03-21T07:24:22.000000Z'
                          updated_at: '2022-03-21T07:24:22.000000Z'
                        created_at: '2022-03-21T07:24:22.000000Z'
                        updated_at: '2022-03-21T07:24:22.000000Z'
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Services'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: sapiente
                description:
                  type: string
                  description: ''
                  example: animi
                image:
                  type: string
                  description: 'optional ex: base64imageFile formats: png,jpeg,jpg'
                  example: molestiae
                subscription_type:
                  type: string
                  description: 'ex: ''one-off'' ,''recurring'''
                  example: qui
                price:
                  type: integer
                  description: 'only if subscription_type is one_off ex: 123'
                  example: 18
                purchase_limit:
                  type: integer
                  description: 'optional only if subscription_type is one_off ex: 12'
                  example: 17
                weekly:
                  type: integer
                  description: 'only if subscription_type is recurring ex: 123'
                  example: 19
                monthly:
                  type: integer
                  description: 'only if subscription_type is recurring ex: 123'
                  example: 10
                quarterly:
                  type: integer
                  description: 'only if subscription_type is recurring ex: 123'
                  example: 9
                biannually:
                  type: integer
                  description: 'only if subscription_type is recurring ex: 123'
                  example: 18
                annually:
                  type: integer
                  description: 'only if subscription_type is recurring ex: 123'
                  example: 15
                max_concurrent_requests:
                  type: integer
                  description: 'optional only if subscription_type is recurring ex: 12'
                  example: 3
                max_requests_per_month:
                  type: integer
                  description: 'optional only if subscription_type is recurring ex: 12'
                  example: 6
              required:
                - name
                - description
                - subscription_type
                - price
                - weekly
                - monthly
                - quarterly
                - biannually
                - annually
    delete:
      summary: 'Delete Service'
      description: 'This api delete service'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Services'
    parameters:
      -
        in: path
        name: id
        description: Integer
        example: et
        required: true
        schema:
          type: string
  '/v1/agencies/services/change-status/{id}':
    put:
      summary: "Toggle Service Status\nThis api update the services status to active or pending."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Services'
    parameters:
      -
        in: path
        name: id
        description: ''
        example: 8
        required: true
        schema:
          type: integer
  /v1/agencies/users:
    get:
      summary: "Get Users\nThis will return logged in user profile."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    users:
                      -
                        id: 12
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan108@saasfa.com
                        last_logged_in: null
                        status: active
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 11
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan107@saasfa.com
                        last_logged_in: null
                        status: active
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 10
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan106@saasfa.com
                        last_logged_in: null
                        status: active
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 9
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan105@saasfa.com
                        last_logged_in: null
                        status: active
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 7
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan102@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 6
                        first_name: Faizan
                        last_name: ahmed
                        email: faizan101@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 5
                        first_name: Taimour
                        last_name: Hadi
                        email: taimour.hadi@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 8
                            name: Accounts
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 4
                        first_name: Fahad
                        last_name: khan
                        email: fahad.khan@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 7
                            name: HR
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 3
                        first_name: Imran
                        last_name: Mumtaz
                        email: imran.mumtaz@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 6
                            name: Finance
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 2
                        first_name: Mehmood
                        last_name: Ismail
                        email: mehmood.ismail@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                    pagination:
                      total: 10
                      count: 10
                      per_page: 20
                      current_page: 1
                      total_pages: 1
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      users:
                        -
                          id: 12
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan108@saasfa.com
                          last_logged_in: null
                          status: active
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 11
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan107@saasfa.com
                          last_logged_in: null
                          status: active
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 10
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan106@saasfa.com
                          last_logged_in: null
                          status: active
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 9
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan105@saasfa.com
                          last_logged_in: null
                          status: active
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 7
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan102@saasfa.com
                          last_logged_in: null
                          status: pending
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 6
                          first_name: Faizan
                          last_name: ahmed
                          email: faizan101@saasfa.com
                          last_logged_in: null
                          status: pending
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 5
                          first_name: Taimour
                          last_name: Hadi
                          email: taimour.hadi@saasfa.com
                          last_logged_in: null
                          status: pending
                          roles:
                            -
                              id: 8
                              name: Accounts
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 4
                          first_name: Fahad
                          last_name: khan
                          email: fahad.khan@saasfa.com
                          last_logged_in: null
                          status: pending
                          roles:
                            -
                              id: 7
                              name: HR
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 3
                          first_name: Imran
                          last_name: Mumtaz
                          email: imran.mumtaz@saasfa.com
                          last_logged_in: null
                          status: pending
                          roles:
                            -
                              id: 6
                              name: Finance
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 2
                          first_name: Mehmood
                          last_name: Ismail
                          email: mehmood.ismail@saasfa.com
                          last_logged_in: null
                          status: pending
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                      pagination:
                        total: 10
                        count: 10
                        per_page: 20
                        current_page: 1
                        total_pages: 1
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Users Management'
    post:
      summary: "Create Users\nThis api create new user."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    user:
                      id: 7
                      first_name: Faizan
                      last_name: Ahmed
                      email: faizan102@saasfa.com
                      last_logged_in: null
                      status: pending
                      roles:
                        -
                          id: 2
                          name: Admin
                          created_at: '2022-03-04T14:54:53.000000Z'
                      permissions: []
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      user:
                        id: 7
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan102@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Users Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: String
                  description: ''
                  example: provident
                last_name:
                  type: String
                  description: ''
                  example: quaerat
                email:
                  type: email
                  description: ''
                  example: minus
                password:
                  type: String
                  description: ''
                  example: ex
                password_confirmation:
                  type: String
                  description: ''
                  example: illo
                status:
                  type: string
                  description: 'ex: pending,active,blocked'
                  example: quis
                roles:
                  type: array
                  description: 'ex: [1,2,3]'
                  example:
                    - recusandae
                  items:
                    type: string
                permissions:
                  type: array
                  description: 'ex: [1,2,3]'
                  example:
                    - ut
                  items:
                    type: string
              required:
                - first_name
                - last_name
                - email
                - roles
    parameters:
      -
        in: path
        name: users
        description: 'Optional parameter. 1,2,3,4'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: suscipit
      -
        in: path
        name: email
        description: 'Optional parameter. ex: abc.com,xyz.co'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ex
      -
        in: path
        name: first_name
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: eos
      -
        in: path
        name: last_name
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: quas
      -
        in: path
        name: full_name
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: illo
      -
        in: path
        name: status
        description: 'Optional parameter. ex: pending,active,blocked'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: alias
      -
        in: path
        name: order_by
        description: 'Optional parameter. ex: asc/desc'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: quisquam
      -
        in: path
        name: from_date
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: Y-m-d
      -
        in: path
        name: to_date
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: Y-m-d
      -
        in: path
        name: pagination
        description: 'Optional parameter.'
        required: true
        schema:
          type: boolean
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: true
      -
        in: path
        name: page_limit
        description: 'Optional parameter.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 10
      -
        in: path
        name: page
        description: 'Optional parameter.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 5
      -
        in: path
        name: roles
        description: 'Optional parameter. ex: admin,test'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: omnis
  '/v1/agencies/users/{id}':
    get:
      summary: "Show User Details\nThis api show the uer details."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    user:
                      id: 7
                      first_name: Faizan
                      last_name: Ahmed
                      email: faizan102@saasfa.com
                      last_logged_in: null
                      status: pending
                      roles:
                        -
                          id: 2
                          name: Admin
                          created_at: '2022-03-04T14:54:53.000000Z'
                      permissions: []
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      user:
                        id: 7
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan102@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Users Management'
    put:
      summary: 'Update User Details.'
      description: 'This api update user details'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    user:
                      id: 7
                      first_name: Faizan
                      last_name: Ahmed
                      email: faizan102@saasfa.com
                      last_logged_in: null
                      status: pending
                      roles:
                        -
                          id: 2
                          name: Admin
                          created_at: '2022-03-04T14:54:53.000000Z'
                      permissions: []
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      user:
                        id: 7
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan102@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Users Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: String
                  description: ''
                  example: id
                last_name:
                  type: String
                  description: ''
                  example: non
                status:
                  type: string
                  description: 'ex: pending,active,blocked'
                  example: veniam
                roles:
                  type: array
                  description: 'ex: [1,2,3]'
                  example:
                    - fuga
                  items:
                    type: string
                permissions:
                  type: array
                  description: 'ex: [1,2,3]'
                  example:
                    - possimus
                  items:
                    type: string
              required:
                - first_name
                - last_name
                - status
                - roles
    delete:
      summary: 'Delete User'
      description: 'This api delete user'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Users Management'
    parameters:
      -
        in: path
        name: id
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: user_id
        description: Integer
        example: consectetur
        required: true
        schema:
          type: string
  '/v1/agencies/users/change-status/{id}':
    put:
      summary: "Toggle User Status\nThis api update the users status to active or deactive\nother then customers."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Agency Users Management'
    parameters:
      -
        in: path
        name: id
        description: ''
        example: accusantium
        required: true
        schema:
          type: string
      -
        in: path
        name: user_id
        description: ''
        example: 10
        required: true
        schema:
          type: integer
  '/v1/agencies/users/change-password/{id}':
    put:
      summary: 'Change Password of Any User'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
      tags:
        - 'Agency Users Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: 'ex: 123456'
                  example: voluptas
              required:
                - password
    parameters:
      -
        in: path
        name: id
        description: ''
        example: 17
        required: true
        schema:
          type: integer
  /v1/admins/auth/login:
    post:
      summary: "Access Token Or Login\nThis function is useful for login, to return access token for users."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Client-ID
          description: ''
          example: 'string required'
          schema:
            type: string
        -
          in: header
          name: Client-Secret
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    authentication:
                      access_token: eyJ0eXAiOiwrewqwqwqewqewqewqewqewqdWQiOiIxIiwianRpIjoiNmNmNzVhOTcdsadsadasdsadsadsadsadsaQzODRlYzFjMmYxYjVlNjdiYTc4MWQ3OTg4YWQ0Yzc2ZDQ0N2NiNjI2MDNiZmIxMmQyZWM5ZmQxMDUiLCJpYXQiOjE2NDY3MzI4MjcuMDczNzQ5LCJuYmYiOjE2NDY3MzI4MjcuMDczNzYsImV4cCI6MTY3ODI2ODgyNy4wMzA2MzMsInN1YiI6IjEiLCJzY29wZXMiOltdfQ.k5QtG7h6W4fwAILAgvDa439GEnEzqFc6zyxWKwUdRw9j9pbN9D14FpGpLck4ZNGptxEKN72fdKGVSbD6TDrcfPdHZe6nJv5Wbtuz_iFudLSimm12fEvzUUTzUC4oGZYUw8WtoO_0-X5l4CpAXWdE_sJVkb6Y2-M4SOmxMvsfsrzBzRIS-yaS2dgL9lANyyeyWu624OvuL1TVCZkeK_IyjGXBXNE-qaJvGGBBxAnzMC_xTQJOtNGxMeTMaBQbzkUSMU5vNcfFLF9z6SDUU9kxC0drke2pYMVg5Kzrp6cXLWIWJVwuJ1-nNoi2LjGIQPNO1-5zMuIJyEljrs4erARfkFYzuoEPjfm80TvrNyweGqCVol5CmT0dxYBaLRy15EEQ5n0iJCHj9aY-xwV3jis5wxiubtXBPChSkVQE799gpOvmyq_pVhoXeCoPpAsBmRLsQeN_VVG8PhI3p08YEHP4jTfnaNX3I-QkBxlVzpvVyBR1qQ_fvVDdeXqjw7frJ06oov8Wg83L-dCLgdRHLYzz8MXZ2nT1xfjLYdrk8QddOh6s9KQstH5avnAQZcmKIcFiQNTvXJAy2saysUWffygyN797JN0PhaTdCD6tiPlxyDguq0uT_Djp4YdFpWY2mIzONBVCqdSWxMbasJIMCBIa-3yH-8O-j_kpXIa3VuP_tKA
                      token_type: Bearer
                      expiry: '2022-03-18 09:47:07'
                      user:
                        id: 1
                        first_name: 'Faizan Ahmed'
                        last_name: Raza
                        email: faizan.raza@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 1
                            name: 'Super Admin'
                            created_at: '2022-03-04T14:54:53.000000Z'
                            permissions:
                              -
                                id: 1
                                name: access_all
                                created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      authentication:
                        access_token: eyJ0eXAiOiwrewqwqwqewqewqewqewqewqdWQiOiIxIiwianRpIjoiNmNmNzVhOTcdsadsadasdsadsadsadsadsaQzODRlYzFjMmYxYjVlNjdiYTc4MWQ3OTg4YWQ0Yzc2ZDQ0N2NiNjI2MDNiZmIxMmQyZWM5ZmQxMDUiLCJpYXQiOjE2NDY3MzI4MjcuMDczNzQ5LCJuYmYiOjE2NDY3MzI4MjcuMDczNzYsImV4cCI6MTY3ODI2ODgyNy4wMzA2MzMsInN1YiI6IjEiLCJzY29wZXMiOltdfQ.k5QtG7h6W4fwAILAgvDa439GEnEzqFc6zyxWKwUdRw9j9pbN9D14FpGpLck4ZNGptxEKN72fdKGVSbD6TDrcfPdHZe6nJv5Wbtuz_iFudLSimm12fEvzUUTzUC4oGZYUw8WtoO_0-X5l4CpAXWdE_sJVkb6Y2-M4SOmxMvsfsrzBzRIS-yaS2dgL9lANyyeyWu624OvuL1TVCZkeK_IyjGXBXNE-qaJvGGBBxAnzMC_xTQJOtNGxMeTMaBQbzkUSMU5vNcfFLF9z6SDUU9kxC0drke2pYMVg5Kzrp6cXLWIWJVwuJ1-nNoi2LjGIQPNO1-5zMuIJyEljrs4erARfkFYzuoEPjfm80TvrNyweGqCVol5CmT0dxYBaLRy15EEQ5n0iJCHj9aY-xwV3jis5wxiubtXBPChSkVQE799gpOvmyq_pVhoXeCoPpAsBmRLsQeN_VVG8PhI3p08YEHP4jTfnaNX3I-QkBxlVzpvVyBR1qQ_fvVDdeXqjw7frJ06oov8Wg83L-dCLgdRHLYzz8MXZ2nT1xfjLYdrk8QddOh6s9KQstH5avnAQZcmKIcFiQNTvXJAy2saysUWffygyN797JN0PhaTdCD6tiPlxyDguq0uT_Djp4YdFpWY2mIzONBVCqdSWxMbasJIMCBIa-3yH-8O-j_kpXIa3VuP_tKA
                        token_type: Bearer
                        expiry: '2022-03-18 09:47:07'
                        user:
                          id: 1
                          first_name: 'Faizan Ahmed'
                          last_name: Raza
                          email: faizan.raza@saasfa.com
                          last_logged_in: null
                          status: pending
                          roles:
                            -
                              id: 1
                              name: 'Super Admin'
                              created_at: '2022-03-04T14:54:53.000000Z'
                              permissions:
                                -
                                  id: 1
                                  name: access_all
                                  created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: email
                  description: 'The username of user.'
                  example: admin@my-app.com
                password:
                  type: string
                  description: 'The password of user.'
                  example: 'Abc*123*'
              required:
                - email
                - password
      security: []
  /v1/admins/logout:
    delete:
      summary: "Logout\nHit api and session get out"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - Authentication
  /v1/admins/change-password:
    put:
      summary: "Change Password\nchange password request of user"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: String
                  description: abcd1234
                  example: abcd1234
                password_confirmation:
                  type: String
                  description: abcd1234
                  example: abcd1234
              required:
                - password
                - password_confirmation
  /v1/customers/register:
    post:
      summary: "Register Customer\nThis api is useful for register new Customer and return access token with Customer information"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Client-ID
          description: ''
          example: 'string required'
          schema:
            type: string
        -
          in: header
          name: Client-Secret
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Customer Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'User first name'
                  example: Bionic
                last_name:
                  type: string
                  description: 'User last name'
                  example: WP
                email:
                  type: email
                  description: 'User email address'
                  example: admin@bionicwp.com
                password:
                  type: string
                  description: 'User password'
                  example: abcd1234
                password_confirmation:
                  type: string
                  description: 'User password'
                  example: abcd1234
              required:
                - first_name
                - last_name
                - email
                - password
                - password_confirmation
      security: []
  /v1/customers/verify-token:
    post:
      summary: "Verify Token\nThis function is useful to check the token is valid or not"
      description: ''
      parameters:
        -
          in: query
          name: token
          description: S0OoOuegYqgQX8JMnbovfnaV7QjMEHLc
          example: S0OoOuegYqgQX8JMnbovfnaV7QjMEHLc
          required: true
          schema:
            type: string
            description: S0OoOuegYqgQX8JMnbovfnaV7QjMEHLc
            example: S0OoOuegYqgQX8JMnbovfnaV7QjMEHLc
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Client-ID
          description: ''
          example: 'string required'
          schema:
            type: string
        -
          in: header
          name: Client-Secret
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Customer Authentication'
      security: []
  /v1/customers/login:
    post:
      summary: "Access Token Or Login\nThis function is useful for login, to return access token for customer."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Client-ID
          description: ''
          example: 'string required'
          schema:
            type: string
        -
          in: header
          name: Client-Secret
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    authentication:
                      access_token: eyJ0eXAiOiJKV1dsadasdsadsadI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZWVjsadsadsadsadsadsadasOWRkNGI1NGI0NDM1NjQ4Y2FjYmQ3NjE2Mzk5MmViNzU4NDVmYzQwYTBlMGE3MWViMTZhMzE1ZmFlOWEiLCJpYXQiOjE2NDY4MTE2ODIuMDg1MTY0LCJuYmYiOjE2NDY4MTE2ODIuMDg1MTgxLCJleHAiOjE2NzgzNDc2ODIuMDcxNDcsInN1YiI6IjE1Iiwic2NvcGVzIjpbXX0.D0tOC4p1lKX8EYOGedrNHvt1s5kzxVxAtFuYUz8zT2lg5ePDiBydjDrS1ARlshnrL71GIucMhpg1Nazt-3nJL4FbFKXmbZJX-Ltu-lYIxuKqCSqCZDA9XOFchfSuxwzsm9-vFCBhGzSWgxDQucYAKvcU3HiiTisHqaupMlx8sOhivt3PtNQe2VZRpvJHGUQNJsAhs3YavBaLjyUjulwp9j5gotfa4oDmVNB9c15ilTX38X8wxWhiV-zyEC2kSI1BQV9RhS2e54oyorgKxqq5m5S0fBxLIAK3F5B_-LGYKh4xrlNC-w0z0YZh1a1dmCGWnUmCB2qN_fHP_cZ8jXnfqxsf6j7qxrzHhv6WFa5qj1P-ofUDn4ZW3FIp-Ja-7FaNPzBDMbQUKpTlTet1rBFs5ayP8gIhcsp25gw8Q3yNKCcuT5Hm2FzHJQqUdKPv5iqD9wwK48dCYwoOqrtbdZAfgQU9norNzJysp9tuY3FXXGvtBZ6BbZiR_cFfQvyVD97YBGedvZrSlqi7kQJGAKTLx4iXes7LLjKOuvI_RgsNvyw4xsfe4ycjjZhSwqERH3jhd4fUomKO-aKh1WrCf1-4jnCvzNmIO6xZ29PX4XsyhndUctcysXY3tpFx_EGaI-a4oXhP4NQNfkIVvPAUEC0XSfwzRYg5FZDV71xnjTdausw
                      token_type: Bearer
                      expiry: '2022-03-19 07:41:22'
                      agency:
                        id: 3
                        agency_name: 'abc agency 123'
                        created_at: '2022-03-09T07:41:21.000000Z'
                      user:
                        id: 15
                        first_name: faizan
                        last_name: raza
                        email: agency102@agt.com
                        last_logged_in: null
                        status: pending
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      authentication:
                        access_token: eyJ0eXAiOiJKV1dsadasdsadsadI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZWVjsadsadsadsadsadsadasOWRkNGI1NGI0NDM1NjQ4Y2FjYmQ3NjE2Mzk5MmViNzU4NDVmYzQwYTBlMGE3MWViMTZhMzE1ZmFlOWEiLCJpYXQiOjE2NDY4MTE2ODIuMDg1MTY0LCJuYmYiOjE2NDY4MTE2ODIuMDg1MTgxLCJleHAiOjE2NzgzNDc2ODIuMDcxNDcsInN1YiI6IjE1Iiwic2NvcGVzIjpbXX0.D0tOC4p1lKX8EYOGedrNHvt1s5kzxVxAtFuYUz8zT2lg5ePDiBydjDrS1ARlshnrL71GIucMhpg1Nazt-3nJL4FbFKXmbZJX-Ltu-lYIxuKqCSqCZDA9XOFchfSuxwzsm9-vFCBhGzSWgxDQucYAKvcU3HiiTisHqaupMlx8sOhivt3PtNQe2VZRpvJHGUQNJsAhs3YavBaLjyUjulwp9j5gotfa4oDmVNB9c15ilTX38X8wxWhiV-zyEC2kSI1BQV9RhS2e54oyorgKxqq5m5S0fBxLIAK3F5B_-LGYKh4xrlNC-w0z0YZh1a1dmCGWnUmCB2qN_fHP_cZ8jXnfqxsf6j7qxrzHhv6WFa5qj1P-ofUDn4ZW3FIp-Ja-7FaNPzBDMbQUKpTlTet1rBFs5ayP8gIhcsp25gw8Q3yNKCcuT5Hm2FzHJQqUdKPv5iqD9wwK48dCYwoOqrtbdZAfgQU9norNzJysp9tuY3FXXGvtBZ6BbZiR_cFfQvyVD97YBGedvZrSlqi7kQJGAKTLx4iXes7LLjKOuvI_RgsNvyw4xsfe4ycjjZhSwqERH3jhd4fUomKO-aKh1WrCf1-4jnCvzNmIO6xZ29PX4XsyhndUctcysXY3tpFx_EGaI-a4oXhP4NQNfkIVvPAUEC0XSfwzRYg5FZDV71xnjTdausw
                        token_type: Bearer
                        expiry: '2022-03-19 07:41:22'
                        agency:
                          id: 3
                          agency_name: 'abc agency 123'
                          created_at: '2022-03-09T07:41:21.000000Z'
                        user:
                          id: 15
                          first_name: faizan
                          last_name: raza
                          email: agency102@agt.com
                          last_logged_in: null
                          status: pending
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Customer Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: email
                  description: 'The username of user.'
                  example: customer@my-app.com
                password:
                  type: string
                  description: 'The password of user.'
                  example: 'Abc*123*'
              required:
                - email
                - password
      security: []
  /v1/customers/forget-password:
    post:
      summary: "Forgot Password\nThis api will send an email to valid customer with token for resetting the password"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Client-ID
          description: ''
          example: 'string required'
          schema:
            type: string
        -
          in: header
          name: Client-Secret
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Customer Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: String
                  description: 'User valid email address'
                  example: user@bionicwp.com
              required:
                - email
      security: []
  /v1/customers/create-new-password:
    post:
      summary: "Create New Password\nauthenticate customer request and then create new password"
      description: ''
      parameters:
        -
          in: query
          name: token
          description: 'String T5oqVFXCYiDjUtZpzvXJXvzw2xJClHNA'
          example: T5oqVFXCYiDjUtZpzvXJXvzw2xJClHNA
          required: true
          schema:
            type: string
            description: 'String T5oqVFXCYiDjUtZpzvXJXvzw2xJClHNA'
            example: T5oqVFXCYiDjUtZpzvXJXvzw2xJClHNA
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Client-ID
          description: ''
          example: 'string required'
          schema:
            type: string
        -
          in: header
          name: Client-Secret
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Customer Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: String
                  description: abcd1234
                  example: abcd1234
                password_confirmation:
                  type: String
                  description: abcd1234
                  example: abcd1234
              required:
                - password
                - password_confirmation
      security: []
  /v1/customers/logout:
    delete:
      summary: "Logout\nHit api and session logout"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'string required'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Customer Authentication'
  /v1/admins/permissions:
    get:
      summary: "Permission List\nThis api return the collection of all Permissions created."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    collections:
                      -
                        id: 13
                        name: users_toggle_status
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 12
                        name: users_delete
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 11
                        name: users_update
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 10
                        name: users_create
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 9
                        name: users_read
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 8
                        name: users_all
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 7
                        name: permissions_list
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 6
                        name: roles_delete
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 5
                        name: roles_update
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 4
                        name: roles_create
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 3
                        name: roles_read
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 2
                        name: roles_all
                        created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 1
                        name: access_all
                        created_at: '2022-03-04T14:54:53.000000Z'
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      collections:
                        -
                          id: 13
                          name: users_toggle_status
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 12
                          name: users_delete
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 11
                          name: users_update
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 10
                          name: users_create
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 9
                          name: users_read
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 8
                          name: users_all
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 7
                          name: permissions_list
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 6
                          name: roles_delete
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 5
                          name: roles_update
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 4
                          name: roles_create
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 3
                          name: roles_read
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 2
                          name: roles_all
                          created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 1
                          name: access_all
                          created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
      tags:
        - 'Permissions Api'
  /v1/agencies/portal-settings:
    put:
      summary: "Update Portal Settings\nThis api update portal settings."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Portal Settings'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: pariatur
                logo:
                  type: string
                  description: 'ex: base64imageFile formats: png,jpeg,jpg'
                  example: dolor
                favicon:
                  type: string
                  description: 'ex: base64imageFile formats: png,x-icon'
                  example: omnis
                primary_color:
                  type: string
                  description: 'ex: ''#fsfsd'''
                  example: dicta
  /v1/admins/roles:
    get:
      summary: "Roles List\nThis api return the collection of all Roles created."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    roles:
                      -
                        id: 1
                        name: 'Super Admin'
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions:
                          -
                            id: 1
                            name: access_all
                            created_at: '2022-03-04T14:54:53.000000Z'
                      -
                        id: 2
                        name: Admin
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 3
                        name: Agency
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 4
                        name: Customer
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 5
                        name: User
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 6
                        name: Finance
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 7
                        name: HR
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 8
                        name: Accounts
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      roles:
                        -
                          id: 1
                          name: 'Super Admin'
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions:
                            -
                              id: 1
                              name: access_all
                              created_at: '2022-03-04T14:54:53.000000Z'
                        -
                          id: 2
                          name: Admin
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 3
                          name: Agency
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 4
                          name: Customer
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 5
                          name: User
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 6
                          name: Finance
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 7
                          name: HR
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 8
                          name: Accounts
                          created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
      tags:
        - 'Roles Management'
    post:
      summary: "Create Role\nThis api is for create new Role"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    role:
                      id: 1
                      name: 'Super Admin'
                      created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        -
                          id: 1
                          name: access_all
                          created_at: '2022-03-04T14:54:53.000000Z'
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      role:
                        id: 1
                        name: 'Super Admin'
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions:
                          -
                            id: 1
                            name: access_all
                            created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Roles Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: String
                  description: ''
                  example: qui
                permissions:
                  type: array
                  description: optional
                  example:
                    - et
                  items:
                    type: string
              required:
                - name
    parameters:
      -
        in: path
        name: order_by
        description: 'Optional parameter. ex: asc/desc'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ex
      -
        in: path
        name: from_date
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: Y-m-d
      -
        in: path
        name: to_date
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: Y-m-d
      -
        in: path
        name: pagination
        description: 'Optional parameter.'
        required: true
        schema:
          type: boolean
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: false
      -
        in: path
        name: page_limit
        description: 'Optional parameter.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 12
      -
        in: path
        name: page
        description: 'Optional parameter.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 9
  '/v1/admins/roles/{id}':
    get:
      summary: "Role Details\nThis api show the details of requested Role."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    role:
                      id: 1
                      name: 'Super Admin'
                      created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        -
                          id: 1
                          name: access_all
                          created_at: '2022-03-04T14:54:53.000000Z'
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      role:
                        id: 1
                        name: 'Super Admin'
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions:
                          -
                            id: 1
                            name: access_all
                            created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Roles Management'
    put:
      summary: "Role Update\nThis api update the details of requested Role."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    role:
                      id: 1
                      name: 'Super Admin'
                      created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        -
                          id: 1
                          name: access_all
                          created_at: '2022-03-04T14:54:53.000000Z'
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      role:
                        id: 1
                        name: 'Super Admin'
                        created_at: '2022-03-04T14:54:53.000000Z'
                        permissions:
                          -
                            id: 1
                            name: access_all
                            created_at: '2022-03-04T14:54:53.000000Z'
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Roles Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: String
                  description: ''
                  example: expedita
                permissions:
                  type: array
                  description: optional
                  example:
                    - optio
                  items:
                    type: string
              required:
                - name
    delete:
      summary: 'Delete Role'
      description: 'Delete Requested Record'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'String required Example: Bearer TOKEN'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'Roles Management'
    parameters:
      -
        in: path
        name: id
        description: ''
        example: porro
        required: true
        schema:
          type: string
      -
        in: path
        name: role_id
        description: Integer
        example: voluptatibus
        required: true
        schema:
          type: string
  /v1/admins/users:
    get:
      summary: "Get Users\nThis will return logged in user profile."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    users:
                      -
                        id: 12
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan108@saasfa.com
                        last_logged_in: null
                        status: active
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 11
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan107@saasfa.com
                        last_logged_in: null
                        status: active
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 10
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan106@saasfa.com
                        last_logged_in: null
                        status: active
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 9
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan105@saasfa.com
                        last_logged_in: null
                        status: active
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 7
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan102@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 6
                        first_name: Faizan
                        last_name: ahmed
                        email: faizan101@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 5
                        first_name: Taimour
                        last_name: Hadi
                        email: taimour.hadi@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 8
                            name: Accounts
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 4
                        first_name: Fahad
                        last_name: khan
                        email: fahad.khan@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 7
                            name: HR
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 3
                        first_name: Imran
                        last_name: Mumtaz
                        email: imran.mumtaz@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 6
                            name: Finance
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      -
                        id: 2
                        first_name: Mehmood
                        last_name: Ismail
                        email: mehmood.ismail@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                    pagination:
                      total: 10
                      count: 10
                      per_page: 20
                      current_page: 1
                      total_pages: 1
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      users:
                        -
                          id: 12
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan108@saasfa.com
                          last_logged_in: null
                          status: active
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 11
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan107@saasfa.com
                          last_logged_in: null
                          status: active
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 10
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan106@saasfa.com
                          last_logged_in: null
                          status: active
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 9
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan105@saasfa.com
                          last_logged_in: null
                          status: active
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 7
                          first_name: Faizan
                          last_name: Ahmed
                          email: faizan102@saasfa.com
                          last_logged_in: null
                          status: pending
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 6
                          first_name: Faizan
                          last_name: ahmed
                          email: faizan101@saasfa.com
                          last_logged_in: null
                          status: pending
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 5
                          first_name: Taimour
                          last_name: Hadi
                          email: taimour.hadi@saasfa.com
                          last_logged_in: null
                          status: pending
                          roles:
                            -
                              id: 8
                              name: Accounts
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 4
                          first_name: Fahad
                          last_name: khan
                          email: fahad.khan@saasfa.com
                          last_logged_in: null
                          status: pending
                          roles:
                            -
                              id: 7
                              name: HR
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 3
                          first_name: Imran
                          last_name: Mumtaz
                          email: imran.mumtaz@saasfa.com
                          last_logged_in: null
                          status: pending
                          roles:
                            -
                              id: 6
                              name: Finance
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                        -
                          id: 2
                          first_name: Mehmood
                          last_name: Ismail
                          email: mehmood.ismail@saasfa.com
                          last_logged_in: null
                          status: pending
                          roles:
                            -
                              id: 2
                              name: Admin
                              created_at: '2022-03-04T14:54:53.000000Z'
                          permissions: []
                      pagination:
                        total: 10
                        count: 10
                        per_page: 20
                        current_page: 1
                        total_pages: 1
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'User Management'
    post:
      summary: "Create Users\nThis api create new user."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    user:
                      id: 7
                      first_name: Faizan
                      last_name: Ahmed
                      email: faizan102@saasfa.com
                      last_logged_in: null
                      status: pending
                      roles:
                        -
                          id: 2
                          name: Admin
                          created_at: '2022-03-04T14:54:53.000000Z'
                      permissions: []
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      user:
                        id: 7
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan102@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'User Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: String
                  description: ''
                  example: magni
                last_name:
                  type: String
                  description: ''
                  example: voluptatibus
                email:
                  type: email
                  description: ''
                  example: non
                password:
                  type: String
                  description: ''
                  example: ut
                password_confirmation:
                  type: String
                  description: ''
                  example: quidem
                status:
                  type: string
                  description: 'ex: pending,active,blocked'
                  example: veniam
                roles:
                  type: array
                  description: 'ex: [1,2,3]'
                  example:
                    - ad
                  items:
                    type: string
                permissions:
                  type: array
                  description: 'ex: [1,2,3]'
                  example:
                    - placeat
                  items:
                    type: string
              required:
                - first_name
                - last_name
                - email
                - roles
    parameters:
      -
        in: path
        name: users
        description: 'Optional parameter. 1,2,3,4'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: quaerat
      -
        in: path
        name: email
        description: 'Optional parameter. ex: abc.com,xyz.co'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: molestias
      -
        in: path
        name: first_name
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: accusantium
      -
        in: path
        name: last_name
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ea
      -
        in: path
        name: full_name
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ipsa
      -
        in: path
        name: status
        description: 'Optional parameter. ex: pending,active,blocked'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ipsum
      -
        in: path
        name: order_by
        description: 'Optional parameter. ex: asc/desc'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: illum
      -
        in: path
        name: from_date
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: Y-m-d
      -
        in: path
        name: to_date
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: Y-m-d
      -
        in: path
        name: pagination
        description: 'Optional parameter.'
        required: true
        schema:
          type: boolean
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: false
      -
        in: path
        name: page_limit
        description: 'Optional parameter.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 13
      -
        in: path
        name: page
        description: 'Optional parameter.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 11
      -
        in: path
        name: roles
        description: 'Optional parameter. ex: admin,test'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: minus
  '/v1/admins/users/{id}':
    get:
      summary: "Show User Details\nThis api show the uer details."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    user:
                      id: 7
                      first_name: Faizan
                      last_name: Ahmed
                      email: faizan102@saasfa.com
                      last_logged_in: null
                      status: pending
                      roles:
                        -
                          id: 2
                          name: Admin
                          created_at: '2022-03-04T14:54:53.000000Z'
                      permissions: []
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      user:
                        id: 7
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan102@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'User Management'
    put:
      summary: 'Update User Details.'
      description: 'This api update user details'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    user:
                      id: 7
                      first_name: Faizan
                      last_name: Ahmed
                      email: faizan102@saasfa.com
                      last_logged_in: null
                      status: pending
                      roles:
                        -
                          id: 2
                          name: Admin
                          created_at: '2022-03-04T14:54:53.000000Z'
                      permissions: []
                    permissions:
                      - access_all
                  error: {  }
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: object
                    example:
                      user:
                        id: 7
                        first_name: Faizan
                        last_name: Ahmed
                        email: faizan102@saasfa.com
                        last_logged_in: null
                        status: pending
                        roles:
                          -
                            id: 2
                            name: Admin
                            created_at: '2022-03-04T14:54:53.000000Z'
                        permissions: []
                      permissions:
                        - access_all
                  error:
                    type: object
                    example: {  }
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: {  }
                  error:
                    code: 'Error code'
                    message: 'Error Message.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: object
                    example: {  }
                  error:
                    type: object
                    example:
                      code: 'Error code'
                      message: 'Error Message.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'User Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: String
                  description: ''
                  example: debitis
                last_name:
                  type: String
                  description: ''
                  example: ab
                status:
                  type: string
                  description: 'ex: pending,active,blocked'
                  example: ex
                roles:
                  type: array
                  description: 'ex: [1,2,3]'
                  example:
                    - tenetur
                  items:
                    type: string
                permissions:
                  type: array
                  description: 'ex: [1,2,3]'
                  example:
                    - alias
                  items:
                    type: string
              required:
                - first_name
                - last_name
                - status
                - roles
    delete:
      summary: 'Delete User'
      description: 'This api delete user'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'User Management'
    parameters:
      -
        in: path
        name: id
        description: ''
        example: eum
        required: true
        schema:
          type: string
      -
        in: path
        name: user_id
        description: Integer
        example: laudantium
        required: true
        schema:
          type: string
  '/v1/admins/users/change-status/{id}':
    put:
      summary: "Toggle User Status\nThis api update the users status to active or deactive\nother then customers."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error:
                    code: 401
                    message: 'Unaothorized access! User does not have access.'
                  success: false
                  message: 'Operation failed'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: object
                    example:
                      code: 401
                      message: 'Unaothorized access! User does not have access.'
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Operation failed'
      tags:
        - 'User Management'
    parameters:
      -
        in: path
        name: id
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: user_id
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/v1/admins/users/change-password/{id}':
    put:
      summary: 'Change Password of Any User'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  error: null
                  success: true
                  message: 'Operation successful'
                properties:
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: null
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Operation successful'
      tags:
        - 'User Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: 'ex: 123456'
                  example: nostrum
              required:
                - password
    parameters:
      -
        in: path
        name: id
        description: ''
        example: 7
        required: true
        schema:
          type: integer
tags:
  -
    name: 'Agency Authentication'
    description: ''
  -
    name: 'Agency Customers'
    description: ''
  -
    name: 'Agency Permissions Api'
    description: ''
  -
    name: 'Agency Roles Management'
    description: ''
  -
    name: 'Agency Services'
    description: ''
  -
    name: 'Agency Users Management'
    description: ''
  -
    name: Authentication
    description: ''
  -
    name: 'Customer Authentication'
    description: ''
  -
    name: 'Permissions Api'
    description: ''
  -
    name: 'Portal Settings'
    description: ''
  -
    name: 'Roles Management'
    description: ''
  -
    name: 'User Management'
    description: ''
