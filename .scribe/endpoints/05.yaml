name: 'Customer Authentication'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: v1/customers/register
    metadata:
      title: |-
        Register Customer
        This api is useful for register new Customer and return access token with Customer information
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Client-ID: 'string required'
      Client-Secret: 'string required'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'User first name'
        required: true
        example: Bionic
        type: string
        custom: []
      last_name:
        name: last_name
        description: 'User last name'
        required: true
        example: WP
        type: string
        custom: []
      email:
        name: email
        description: 'User email address'
        required: true
        example: admin@bionicwp.com
        type: email
        custom: []
      password:
        name: password
        description: 'User password'
        required: true
        example: abcd1234
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'User password'
        required: true
        example: abcd1234
        type: string
        custom: []
    responses:
      -
        status: 200
        content: "{\r\n    \"data\": [],\r\n    \"error\": null,\r\n    \"success\": true,\r\n    \"message\": \"Operation successful\"\r\n}\r\n"
        headers: []
        description: '200'
      -
        status: 422
        content: "{\r\n    \"data\": {},\r\n    \"error\": {\r\n        \"code\": \"Error code\",\r\n        \"message\": \"Error Message.\"\r\n    },\r\n    \"success\": false,\r\n    \"message\": \"Operation failed\"\r\n}\r\n"
        headers: []
        description: '422'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: v1/customers/verify-token
    metadata:
      title: |-
        Verify Token
        This function is useful to check the token is valid or not
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Client-ID: 'string required'
      Client-Secret: 'string required'
    urlParameters: []
    queryParameters:
      token:
        name: token
        description: S0OoOuegYqgQX8JMnbovfnaV7QjMEHLc
        required: true
        example: S0OoOuegYqgQX8JMnbovfnaV7QjMEHLc
        type: string
        custom: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: "{\r\n    \"data\": [],\r\n    \"error\": null,\r\n    \"success\": true,\r\n    \"message\": \"Operation successful\"\r\n}\r\n"
        headers: []
        description: '200'
      -
        status: 422
        content: "{\r\n    \"data\": {},\r\n    \"error\": {\r\n        \"code\": \"Error code\",\r\n        \"message\": \"Error Message.\"\r\n    },\r\n    \"success\": false,\r\n    \"message\": \"Operation failed\"\r\n}\r\n"
        headers: []
        description: '422'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: v1/customers/login
    metadata:
      title: |-
        Access Token Or Login
        This function is useful for login, to return access token for customer.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Client-ID: 'string required'
      Client-Secret: 'string required'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The username of user.'
        required: true
        example: customer@my-app.com
        type: email
        custom: []
      password:
        name: password
        description: 'The password of user.'
        required: true
        example: 'Abc*123*'
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |
          {
            "data": {
              "authentication": {
                "access_token": "eyJ0eXAiOiJKV1dsadasdsadsadI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZWVjsadsadsadsadsadsadasOWRkNGI1NGI0NDM1NjQ4Y2FjYmQ3NjE2Mzk5MmViNzU4NDVmYzQwYTBlMGE3MWViMTZhMzE1ZmFlOWEiLCJpYXQiOjE2NDY4MTE2ODIuMDg1MTY0LCJuYmYiOjE2NDY4MTE2ODIuMDg1MTgxLCJleHAiOjE2NzgzNDc2ODIuMDcxNDcsInN1YiI6IjE1Iiwic2NvcGVzIjpbXX0.D0tOC4p1lKX8EYOGedrNHvt1s5kzxVxAtFuYUz8zT2lg5ePDiBydjDrS1ARlshnrL71GIucMhpg1Nazt-3nJL4FbFKXmbZJX-Ltu-lYIxuKqCSqCZDA9XOFchfSuxwzsm9-vFCBhGzSWgxDQucYAKvcU3HiiTisHqaupMlx8sOhivt3PtNQe2VZRpvJHGUQNJsAhs3YavBaLjyUjulwp9j5gotfa4oDmVNB9c15ilTX38X8wxWhiV-zyEC2kSI1BQV9RhS2e54oyorgKxqq5m5S0fBxLIAK3F5B_-LGYKh4xrlNC-w0z0YZh1a1dmCGWnUmCB2qN_fHP_cZ8jXnfqxsf6j7qxrzHhv6WFa5qj1P-ofUDn4ZW3FIp-Ja-7FaNPzBDMbQUKpTlTet1rBFs5ayP8gIhcsp25gw8Q3yNKCcuT5Hm2FzHJQqUdKPv5iqD9wwK48dCYwoOqrtbdZAfgQU9norNzJysp9tuY3FXXGvtBZ6BbZiR_cFfQvyVD97YBGedvZrSlqi7kQJGAKTLx4iXes7LLjKOuvI_RgsNvyw4xsfe4ycjjZhSwqERH3jhd4fUomKO-aKh1WrCf1-4jnCvzNmIO6xZ29PX4XsyhndUctcysXY3tpFx_EGaI-a4oXhP4NQNfkIVvPAUEC0XSfwzRYg5FZDV71xnjTdausw",
                "token_type": "Bearer",
                "expiry": "2022-03-19 07:41:22",
                "agency": {
                  "id": 3,
                  "agency_name": "abc agency 123",
                  "created_at": "2022-03-09T07:41:21.000000Z"
                },
                "user": {
                  "id": 15,
                  "first_name": "faizan",
                  "last_name": "raza",
                  "email": "agency102@agt.com",
                  "last_logged_in": null,
                  "status": "pending"
                }
              }
            },
            "error": {},
            "success": true,
            "message": "Operation successful"
          }
        headers: []
        description: '200'
      -
        status: 422
        content: "{\r\n    \"data\": {},\r\n    \"error\": {\r\n        \"code\": \"Error code\",\r\n        \"message\": \"Error Message.\"\r\n    },\r\n    \"success\": false,\r\n    \"message\": \"Operation failed\"\r\n}\r\n"
        headers: []
        description: '422'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: v1/customers/forget-password
    metadata:
      title: |-
        Forgot Password
        This api will send an email to valid customer with token for resetting the password
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Client-ID: 'string required'
      Client-Secret: 'string required'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'User valid email address'
        required: true
        example: user@bionicwp.com
        type: String
        custom: []
    responses:
      -
        status: 200
        content: "{\r\n    \"data\": [],\r\n    \"error\": null,\r\n    \"success\": true,\r\n    \"message\": \"Operation successful\"\r\n}\r\n"
        headers: []
        description: '200'
      -
        status: 422
        content: "{\r\n    \"data\": {},\r\n    \"error\": {\r\n        \"code\": \"Error code\",\r\n        \"message\": \"Error Message.\"\r\n    },\r\n    \"success\": false,\r\n    \"message\": \"Operation failed\"\r\n}\r\n"
        headers: []
        description: '422'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: v1/customers/create-new-password
    metadata:
      title: |-
        Create New Password
        authenticate customer request and then create new password
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Client-ID: 'string required'
      Client-Secret: 'string required'
    urlParameters: []
    queryParameters:
      token:
        name: token
        description: 'String T5oqVFXCYiDjUtZpzvXJXvzw2xJClHNA'
        required: true
        example: T5oqVFXCYiDjUtZpzvXJXvzw2xJClHNA
        type: string
        custom: []
    bodyParameters:
      password:
        name: password
        description: abcd1234
        required: true
        example: abcd1234
        type: String
        custom: []
      password_confirmation:
        name: password_confirmation
        description: abcd1234
        required: true
        example: abcd1234
        type: String
        custom: []
    responses:
      -
        status: 200
        content: "{\r\n    \"data\": [],\r\n    \"error\": null,\r\n    \"success\": true,\r\n    \"message\": \"Operation successful\"\r\n}\r\n"
        headers: []
        description: '200'
      -
        status: 422
        content: "{\r\n    \"data\": {},\r\n    \"error\": {\r\n        \"code\": \"Error code\",\r\n        \"message\": \"Error Message.\"\r\n    },\r\n    \"success\": false,\r\n    \"message\": \"Operation failed\"\r\n}\r\n"
        headers: []
        description: '422'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: v1/customers/logout
    metadata:
      title: |-
        Logout
        Hit api and session logout
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'string required'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: "{\r\n    \"data\": [],\r\n    \"error\": null,\r\n    \"success\": true,\r\n    \"message\": \"Operation successful\"\r\n}\r\n"
        headers: []
        description: '200'
      -
        status: 422
        content: "{\r\n    \"data\": {},\r\n    \"error\": {\r\n        \"code\": \"Error code\",\r\n        \"message\": \"Error Message.\"\r\n    },\r\n    \"success\": false,\r\n    \"message\": \"Operation failed\"\r\n}\r\n"
        headers: []
        description: '422'
    responseFields: []
